{
  "swagger": "2.0",
  "info": {
    "description": "" ,
    "version": "3.0.0",
    "title": "CoinGecko API V3"
  },
  "host": "api.coingecko.com",
  "basePath": "/api/v3",
  "schemes": [
    "https"
  ],
  "paths": {
    "/ping": {
      "get": {
        "tags": [
          "ping"
        ],
        "summary": "Check API server status",
        "description": "Check API server status\n",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status OK"
          }
        }
      }
    },
    "/simple/price": {
      "get": {
        "tags": [
          "simple"
        ],
        "summary": "Get the current price of any cryptocurrencies in any other supported currencies that you need.",
        "description": "Note: to check if a price is stale, please flag `include_last_updated_at=true` to get the latest updated time. You may also flag `include_24hr_change=true` to check if it returns 'null' value.\n\nCache / Update Frequency: every 60 seconds  (every 30 seconds for Pro API)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "id of coins, comma-separated if querying more than 1 coin\n*refers to <b>`coins/list`</b>",
            "required": true,
            "type": "string"
          },
          {
            "name": "vs_currencies",
            "in": "query",
            "description": "vs_currency of coins, comma-separated if querying more than 1 vs_currency\n*refers to <b>`simple/supported_vs_currencies`</b>",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_market_cap",
            "in": "query",
            "description": "<b>true/false</b> to include market_cap, <b>default: false</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_24hr_vol",
            "in": "query",
            "description": "<b>true/false</b> to include 24hr_vol, <b>default: false</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_24hr_change",
            "in": "query",
            "description": "<b>true/false</b> to include 24hr_change, <b>default: false</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_last_updated_at",
            "in": "query",
            "description": "<b>true/false</b> to include last_updated_at of price, <b>default: false</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "precision",
            "in": "query",
            "description": "<b>full</b> or any value between 0 - 18 to specify decimal place for currency price value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "price(s) of cryptocurrency"
          }
        }
      }
    },
    "/simple/token_price/{id}": {
      "get": {
        "tags": [
          "simple"
        ],
        "summary": "Get current price of tokens (using contract addresses) for a given platform in any other currency that you need.",
        "description": "This endpoint allows you to query a token price by using contract address. It returns the global average price that is aggregated across all active exchanges on CoinGecko. It does not return the price of a specific network, you may cross-check the price on CoinGecko.com.\nLearn more about our price methodology <a href='https://www.coingecko.com/en/methodology'>here</a>.\n\nCache / Update Frequency: every 60 seconds  (every 30 seconds for Pro API)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the platform issuing tokens (See asset_platforms endpoint for list of options)",
            "required": true,
            "type": "string"
          },
          {
            "name": "contract_addresses",
            "in": "query",
            "description": "The contract address of tokens, comma separated",
            "required": true,
            "type": "string"
          },
          {
            "name": "vs_currencies",
            "in": "query",
            "description": "vs_currency of coins, comma-separated if querying more than 1 vs_currency\n*refers to <b>`simple/supported_vs_currencies`</b>",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_market_cap",
            "in": "query",
            "description": "<b>true/false</b> to include market_cap, <b>default: false</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_24hr_vol",
            "in": "query",
            "description": "<b>true/false</b> to include 24hr_vol, <b>default: false</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_24hr_change",
            "in": "query",
            "description": "<b>true/false</b> to include 24hr_change, <b>default: false</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_last_updated_at",
            "in": "query",
            "description": "<b>true/false</b> to include last_updated_at of price, <b>default: false</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "precision",
            "in": "query",
            "description": "<b>full</b> or any value between 0 - 18 to specify decimal place for currency price value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "price(s) of cryptocurrency"
          }
        }
      }
    },
    "/simple/supported_vs_currencies": {
      "get": {
        "tags": [
          "simple"
        ],
        "summary": "Get list of supported_vs_currencies.",
        "description": "Cache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "list of supported_vs_currencies"
          }
        }
      }
    },
    "/coins/list": {
      "get": {
        "tags": [
          "coins"
        ],
        "summary": "List all supported coins id, name and symbol (no pagination required)",
        "description": "<li>All the coins that show up on this <strong>/coins/list</strong> endpoint are Active coins that listed by CoinGecko team on CoinGecko.com</li><li>If a coin is inactive or deactivated, it will be removed from <strong>/coins/list</strong></li>\n\nCache / Update Frequency: every 5 minutes",
        "produces": [
          "application/json"
        ],
        "parameters" : [
          {
            "name": "include_platform",
            "in": "query",
            "description": "flag to include platform contract addresses (eg. 0x.... for Ethereum based tokens). \n valid values: true, false",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "List all coins with id, name, and symbol"
          }
        }
      }
    },
    "/coins/markets": {
      "get": {
        "tags": [
          "coins"
        ],
        "summary": "List all supported coins price, market cap, volume, and market related data",
        "description": "Use this to obtain all the coins market data (price, market cap, volume), per page.<br>Note: when both 'category' and 'ids' parameters are supplied, the 'category' parameter takes precedence over the 'ids' parameter.\n\nCache / Update Frequency: every 45 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vs_currency",
            "in": "query",
            "description": "The target currency of market data (usd, eur, jpy, etc.)",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "description":  "The ids of the coin, comma separated crytocurrency symbols (base). refers to `/coins/list`.",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description":  "filter by coin category. Refer to /coin/categories/list",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "valid values: <b>market_cap_asc, market_cap_desc, volume_asc, volume_desc, id_asc, id_desc</b>\nsort results by field.",
            "default": "market_cap_desc",
            "required": false,
            "type": "string"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "valid values: 1..250\n Total results per page",
            "default": 100,
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page through results",
            "default": 1,
            "required": false,
            "type": "integer"
          },
          {
            "name": "sparkline",
            "in": "query",
            "description": "Include sparkline 7 days data (eg. true, false)",
            "default": false,
            "required": false,
            "type": "boolean"
          },
          {
            "name": "price_change_percentage",
            "in": "query",
            "description": "Include price change percentage in <b>1h, 24h, 7d, 14d, 30d, 200d, 1y</b> (eg. '`1h,24h,7d`' comma-separated, invalid values will be discarded)",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "valid values: <b>ar, bg, cs, da, de, el, en, es, fi, fr, he, hi, hr, hu, id, it, ja, ko, lt, nl, no, pl, pt, ro, ru, sk, sl, sv, th, tr, uk, vi, zh, zh-tw</b>",
            "default": "en",
            "required": false,
            "type": "string"
          },
          {
            "name": "precision",
            "in": "query",
            "description": "<b>full</b> or any value between 0 - 18 to specify decimal place for currency price value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List all coins with market data"
          }
        }
      }
    },
    "/coins/{id}": {
      "get": {
        "tags": [
          "coins"
        ],
        "summary": "Get current data (name, price, market, ... including exchange tickers) for a coin",
        "description": "Get current data (name, price, market, ... including exchange tickers) for a coin.<br><br> **IMPORTANT**:\n Ticker object is limited to 100 items, to get more tickers, use `/coins/{id}/tickers`\n Ticker `is_stale` is true when ticker that has not been updated/unchanged from the exchange for more than 8 hours.\n Ticker `is_anomaly` is true if ticker's price is outliered by our system.\n You are responsible for managing how you want to display these information (e.g. footnote, different background, change opacity, hide)\n\nNote: to check if a price is stale, please refer to `last_updated` of the price.\n\nDictionary:<li><strong>last</strong>: latest unconverted price in the respective pair target currency</li><li><strong>volume</strong>: unconverted 24h trading volume in the respective pair target currency</li><li><strong>converted_last</strong>: latest converted price in BTC, ETH, and USD</li><li><strong>converted_volume</strong>: converted 24h trading volume in BTC, ETH, and USD</li><li><strong>timestamp</strong>: returns the last time that the price has changed</li><li><strong>last_traded_at</strong>: returns the last time that the price has changed</li><li><strong>last_fetch_at</strong>: returns the last time we call the API</li>\n\nCache / Update Frequency: every 60 seconds\nData for Twitter, Telegram and Reddit will be updated on daily basis.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the coin id (can be obtained from /coins) eg. bitcoin",
            "required": true,
            "type": "string"
          },
          {
            "name": "localization",
            "in": "query",
            "description": "Include all localized languages in response (true/false) <b>[default: true]</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "tickers",
            "in": "query",
            "description": "Include tickers data (true/false) <b>[default: true]</b>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "market_data",
            "in": "query",
            "description": "Include market_data (true/false) <b>[default: true]</b>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "community_data",
            "in": "query",
            "description": "Include community_data data (true/false) <b>[default: true]</b>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "developer_data",
            "in": "query",
            "description": "Include developer_data data (true/false) <b>[default: true]</b>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sparkline",
            "in": "query",
            "description": "Include sparkline 7 days data (eg. true, false) <b>[default: false]</b>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Get current data for a coin"
          }
        }
      }
    },
    "/coins/{id}/tickers": {
      "get": {
        "tags": [
          "coins"
        ],
        "summary": "Get coin tickers (paginated to 100 items)",
        "description": "Get coin tickers (paginated to 100 items)<br><br> **IMPORTANT**:\n Ticker `is_stale` is true when ticker that has not been updated/unchanged from the exchange for more than 8 hours.\n Ticker `is_anomaly` is true if ticker's price is outliered by our system.\n You are responsible for managing how you want to display these information (e.g. footnote, different background, change opacity, hide)\n\nDictionary:<li><strong>last</strong>: latest unconverted price in the respective pair target currency</li><li><strong>volume</strong>: unconverted 24h trading volume in the respective pair target currency</li><li><strong>converted_last</strong>: latest converted price in BTC, ETH, and USD</li><li><strong>converted_volume</strong>: converted 24h trading volume in BTC, ETH, and USD</li><li><strong>timestamp</strong>: returns the last time that the price has changed</li><li><strong>last_traded_at</strong>: returns the last time that the price has changed</li><li><strong>last_fetch_at</strong>: returns the last time we call the API</li>\n\nCache / Update Frequency: every 2 minutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the coin id (can be obtained from /coins/list) eg. bitcoin",
            "required": true,
            "type": "string"
          },
          {
            "name": "exchange_ids",
            "in": "query",
            "description": "filter results by exchange_ids (ref: v3/exchanges/list)",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_exchange_logo",
            "in": "query",
            "description": "flag to show exchange_logo. valid values: true, false",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page through results",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "in": "query",
            "description": "valid values: <b>trust_score_desc (default), trust_score_asc and volume_desc</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "depth",
            "in": "query",
            "description": "flag to show 2% orderbook depth. i.e., cost_to_move_up_usd and cost_to_move_down_usd. valid values: true, false",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get coin tickers"
          }
        }
      }
    },
    "/coins/{id}/history": {
      "get": {
        "tags": [
          "coins"
        ],
        "summary": "Get historical data (price, market cap, 24hr volume, ..) at a given date for a coin.",
        "description": "Get historical data (price, market cap, 24hr volume, ..) at a given date for a coin.\nThe data returned is at 00:00:00 UTC.\n\nThe last completed UTC day (00:00) is available 35 minutes after midnight on the next UTC day (00:35).",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the coin id (can be obtained from /coins) eg. bitcoin",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date of data snapshot in dd-mm-yyyy eg. 30-12-2022",
            "required": true,
            "type": "string"
          },
          {
            "name": "localization",
            "in": "query",
            "description": "Set to false to exclude localized languages in response",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get historical data at a given date for a coin"
          }
        }
      }
    },
    "/coins/{id}/market_chart": {
      "get": {
        "tags": [
          "coins"
        ],
        "summary": "Get historical market data include price, market cap, and 24h volume (granularity auto)",
        "description": "Get historical market data include price, market cap, and 24h volume (granularity auto)\n\nData granularity is automatic (cannot be adjusted) <b><ul><li>1 day from current time = 5 minute interval data</li><li>2 - 90 days from current time = hourly data</li><li>above 90 days from current time = daily data (00:00 UTC)</li></ul></b>\n\nCache based on days range:<ul><li>1 day = 30 seconds cache</li><li>2-90 days = 30 minutes cache</li><li> 90 days = 12 hours cache</li></ul><p>The last completed UTC day (00:00) is available 35 minutes after midnight on the next UTC day (00:35). The cache will always expire at 00:40 UTC.</p>",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the coin id (can be obtained from /coins) eg. bitcoin",
            "required": true,
            "type": "string"
          },
          {
            "name": "vs_currency",
            "in": "query",
            "description": "The target currency of market data (usd, eur, jpy, etc.)",
            "required": true,
            "type": "string"
          },
          {
            "name": "days",
            "in": "query",
            "description": "Data up to number of days ago (eg. 1,14,30,max)",
            "required": true,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "Data interval. Possible value: daily",
            "required":false,
            "type": "string"
          },
          {
            "name": "precision",
            "in": "query",
            "description": "<b>full</b> or any value between 0 - 18 to specify decimal place for currency price value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get historical market data include price, market cap, and 24h volume"
          }
        }
      }
    },
    "/coins/{id}/market_chart/range": {
      "get": {
        "tags": [
          "coins"
        ],
        "summary": "Get historical market data include price, market cap, and 24h volume within a range of timestamp (granularity auto)",
        "description": "Get historical market data include price, market cap, and 24h volume (granularity auto)\n\nData granularity is automatic (cannot be adjusted) <b><ul><li>1 day from current time = 5 minute interval data</li><li>2 - 90 days of date range = hourly data</li><li>above 90 days of date range = daily data (00:00 UTC)</li></ul></b>\n\nCache / Update Frequency: every 5 minutes.\nThe last completed UTC day (00:00) is available 35 minutes after midnight on the next UTC day (00:35).",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the coin id (can be obtained from /coins) eg. bitcoin",
            "required": true,
            "type": "string"
          },
          {
            "name": "vs_currency",
            "in": "query",
            "description": "The target currency of market data (usd, eur, jpy, etc.)",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "From date in UNIX Timestamp (eg. 1392577232)",
            "required": true,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "To date in UNIX Timestamp (eg. 1422577232)",
            "required": true,
            "type": "string"
          },
          {
            "name": "precision",
            "in": "query",
            "description": "<b>full</b> or any value between 0 - 18 to specify decimal place for currency price value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get historical market data include price, market cap, and 24h volume"
          }
        }
      }
    },
    "/coins/{id}/contract/{contract_address}": {
      "get": {
        "tags": [
          "contract"
        ],
        "summary": "Get coin info from contract address",
        "description": "Get coin info from contract address\n\nCache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset platform (See asset_platforms endpoint for list of options)",
            "required": true,
            "type": "string"
          },
          {
            "name": "contract_address",
            "in": "path",
            "description": "Token's contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get current data for a coin"
          }
        }
      }
    },
    "/coins/{id}/contract/{contract_address}/market_chart/": {
      "get": {
        "tags": [
          "contract"
        ],
        "summary": "Get historical market data include price, market cap, and 24h volume (granularity auto) from a contract address ",
        "description": "Get historical market data include price, market cap, and 24h volume (granularity auto)\n\nData granularity is automatic (cannot be adjusted) <b><ul><li>1 day from current time = 5 minute interval data</li><li>2 - 90 days from current time = hourly data</li><li>above 90 days from current time = daily data (00:00 UTC)</li></ul></b>\n\nCache based on days range:<ul><li>1 day = 30 seconds cache</li><li>2-90 days = 30 minutes cache</li><li> 90 days = 12 hours cache</li></ul><p>The last completed UTC day (00:00) is available 35 minutes after midnight on the next UTC day (00:35). The cache will always expire at 00:40 UTC.</p>",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the platform issuing tokens (See asset_platforms endpoint for list of options)",
            "required": true,
            "type": "string"
          },
          {
            "name": "contract_address",
            "in": "path",
            "description": "Token's contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "vs_currency",
            "in": "query",
            "description": "The target currency of market data (usd, eur, jpy, etc.)",
            "required": true,
            "type": "string"
          },
          {
            "name": "days",
            "in": "query",
            "description": "Data up to number of days ago (eg. 1,14,30,max)",
            "required": true,
            "type": "string"
          },
          {
            "name": "precision",
            "in": "query",
            "description": "<b>full</b> or any value between 0 - 18 to specify decimal place for currency price value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get historical market data include price, market cap, and 24h volume"
          }
        }
      }
    },
    "/coins/{id}/contract/{contract_address}/market_chart/range": {
      "get": {
        "tags": [
          "contract"
        ],
        "summary": "Get historical market data include price, market cap, and 24h volume within a range of timestamp (granularity auto) from a contract address",
        "description": "Get historical market data include price, market cap, and 24h volume (granularity auto)\n\nData granularity is automatic (cannot be adjusted) <b><ul><li>1 day from current time = 5 minute interval data</li><li>2 - 90 days of date range = hourly data</li><li>above 90 days of date range = daily data (00:00 UTC)</li></ul></b>\n\nCache / Update Frequency: every 5 minutes.\nThe last completed UTC day (00:00) is available 35 minutes after midnight on the next UTC day (00:35).",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the platform issuing tokens (See asset_platforms endpoint for list of options)",
            "required": true,
            "type": "string"
          },
          {
            "name": "contract_address",
            "in": "path",
            "description": "Token's contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "vs_currency",
            "in": "query",
            "description": "The target currency of market data (usd, eur, jpy, etc.)",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "From date in UNIX Timestamp (eg. 1392577232)",
            "required": true,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "To date in UNIX Timestamp (eg. 1422577232)",
            "required": true,
            "type": "string"
          },
          {
            "name": "precision",
            "in": "query",
            "description": "<b>full</b> or any value between 0 - 18 to specify decimal place for currency price value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get historical market data include price, market cap, and 24h volume"
          }
        }
      }
    },
    "/coins/{id}/ohlc": {
      "get": {
        "tags": [
          "coins"
        ],
        "summary": "Get coin's OHLC",
        "description": "Candle's body - data granularity is automatic (cannot be adjusted for public api users):\n<ul><li>1 - 2 days: 30 minutes</li><li>3 - 30 days: 4 hours</li><li>31 days and beyond: 4 days</li></ul>\n<p>Daily candle interval parameter is available for paid plan users only (Analyst/Lite/Pro/Enterprise), use <b><i>interval=daily</i></b> parameter in your request:</p>\n<ul><li>'daily' interval: available for 1/7/14/30/90/180 days</li></ul>\n\nCache / Update Frequency: every 30 minutes\nThe last completed UTC day (00:00) is available 35 minutes after midnight on the next UTC day (00:35).",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the coin id (can be obtained from /coins/list) eg. bitcoin",
            "required": true,
            "type": "string"
          },
          {
            "name": "vs_currency",
            "in": "query",
            "description": "The target currency of market data (usd, eur, jpy, etc.)",
            "required": true,
            "type": "string"
          },
          {
            "name": "days",
            "in": "query",
            "description": " Data up to number of days ago (1/7/14/30/90/180/365/max)",
            "required": true,
            "type": "string"
          },
          {
            "name": "precision",
            "in": "query",
            "description": "<b>full</b> or any value between 0 - 18 to specify decimal place for currency price value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation\n\n[\n1594382400000 (time),\n1.1 (open),\n 2.2 (high),\n 3.3 (low),\n 4.4 (close)\n]",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "example": [
                  1594382400000,
                  1.1,
                  2.2,
                  3.3,
                  4.4
                ]
              }
            }
          }
        }
      }
    },
    "/asset_platforms": {
      "get": {
        "tags": [
          "asset_platforms"
        ],
        "summary": "List all asset platforms (Blockchain networks)",
        "description": "List all asset platforms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "apply relevant filters to results\n valid values: \"nft\" (asset_platform nft-support)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List all asset_platforms"
          }
        }
      }
    },
    "/coins/categories/list": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "List all categories",
        "description": "List all categories\n\nCache / Update Frequency: every 5 minutes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List all categories"
          }
        }
      }
    },
    "/coins/categories": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "List all categories with market data",
        "description": "List all categories with market data\n\nCache / Update Frequency: every 5 minutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "valid values: <b>market_cap_desc (default), market_cap_asc, name_desc, name_asc, market_cap_change_24h_desc and market_cap_change_24h_asc</b>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List all categories with market data"
          }
        }
      }
    },
    "/exchanges": {
      "get": {
        "tags": [
          "exchanges"
        ],
        "summary": "List all exchanges (Active with trading volumes)",
        "description": "List all exchanges\n\nCache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "description": "Valid values: 1...250\nTotal results per page\nDefault value:: 100",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page through results",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List all exchanges"
          }
        }
      }
    },
    "/exchanges/list": {
      "get": {
        "tags": [
          "exchanges"
        ],
        "summary": "List all supported markets id and name (no pagination required)",
        "description": "Use this to obtain all the markets' id in order to make API calls\n\nCache / Update Frequency: every 5 minutes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List all coins with id and name"
          }
        }
      }
    },
    "/exchanges/{id}": {
      "get": {
        "tags": [
          "exchanges"
        ],
        "summary": "Get exchange volume in BTC and top 100 tickers only",
        "description": "Get exchange volume in BTC and tickers.<br>For derivatives (e.g. bitmex, binance_futures), please use `/derivatives/exchange/{id}` endpoint.<br><br> **IMPORTANT**:\n Ticker object is limited to 100 items, to get more tickers, use `/exchanges/{id}/tickers`\n Ticker `is_stale` is true when ticker that has not been updated/unchanged from the exchange for more than 8 hours.\n Ticker `is_anomaly` is true if ticker's price is outliered by our system.\n You are responsible for managing how you want to display these information (e.g. footnote, different background, change opacity, hide)\n\nDictionary:<li><strong>last</strong>: latest unconverted price in the respective pair target currency</li><li><strong>volume</strong>: unconverted 24h trading volume in the respective pair target currency</li><li><strong>converted_last</strong>: latest converted price in BTC, ETH, and USD</li><li><strong>converted_volume</strong>: converted 24h trading volume in BTC, ETH, and USD</li><li><strong>timestamp</strong>: returns the last time that the price has changed</li><li><strong>last_traded_at</strong>: returns the last time that the price has changed</li><li><strong>last_fetch_at</strong>: returns the last time we call the API</li>\n\nCache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the exchange id (can be obtained from /exchanges/list) eg. binance",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get exchange volume in BTC and top 100 tickers"
          }
        }
      }
    },
    "/exchanges/{id}/tickers": {
      "get": {
        "tags": [
          "exchanges"
        ],
        "summary": "Get exchange tickers (paginated, 100 tickers per page)",
        "description": "Get exchange tickers (paginated)<br><br> **IMPORTANT**:\n Ticker `is_stale` is true when ticker that has not been updated/unchanged from the exchange for more than 8 hours.\n Ticker `is_anomaly` is true if ticker's price is outliered by our system.\n You are responsible for managing how you want to display these information (e.g. footnote, different background, change opacity, hide)\n\nDictionary:<li><strong>last</strong>: latest unconverted price in the respective pair target currency</li><li><strong>volume</strong>: unconverted 24h trading volume in the respective pair target currency</li><li><strong>converted_last</strong>: latest converted price in BTC, ETH, and USD</li><li><strong>converted_volume</strong>: converted 24h trading volume in BTC, ETH, and USD</li><li><strong>timestamp</strong>: returns the last time that the price has changed</li><li><strong>last_traded_at</strong>: returns the last time that the price has changed</li><li><strong>last_fetch_at</strong>: returns the last time we call the API</li>\n\nCache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the exchange id (can be obtained from /exchanges/list) eg. binance",
            "required": true,
            "type": "string"
          },
          {
            "name": "coin_ids",
            "in": "query",
            "description": "filter tickers by coin_ids (ref: v3/coins/list)",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_exchange_logo",
            "in": "query",
            "description": "flag to show exchange_logo. valid values: true, false",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page through results",
            "required": false,
            "type": "integer"
          },
          {

            "name": "depth",
            "in": "query",
            "description": "flag to show 2% orderbook depth. i.e., cost_to_move_up_usd and cost_to_move_down_usd. valid values: true, false",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "valid values: <b>trust_score_desc (default), trust_score_asc and volume_desc</b>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get exchange tickers"
          }
        }
      }
    },
    "/derivatives": {
      "get": {
        "tags": [
          "derivatives"
        ],
        "summary": "List all derivative tickers",
        "description": "List all derivative tickers.<br>Note: 'open_interest' and 'volume_24h' data are in USD\n\nCache / Update Frequency: every 30 seconds",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List all derivative tickers"
          }
        }
      }
    },
    "/derivatives/exchanges": {
      "get": {
        "tags": [
          "derivatives"
        ],
        "summary": "List all derivative exchanges",
        "description": "List all derivative exchanges.\n\nCache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "order results using following params name_asc，name_desc，open_interest_btc_asc，open_interest_btc_desc，trade_volume_24h_btc_asc，trade_volume_24h_btc_desc",
            "required": false,
            "type": "string"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Total results per page",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page through results",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List all derivative exchanges"
          }
        }
      }
    },
    "/derivatives/exchanges/{id}": {
      "get": {
        "tags": [
          "derivatives"
        ],
        "summary": "show derivative exchange data",
        "description": "show derivative exchange data\n\nDictionary:<li><strong>last</strong>: latest unconverted price in the respective pair target currency</li><li><strong>volume</strong>: unconverted 24h trading volume in the respective pair target currency</li><li><strong>converted_last</strong>: latest converted price in BTC, ETH, and USD</li><li><strong>converted_volume</strong>: converted 24h trading volume in BTC, ETH, and USD</li>\n\nCache / Update Frequency: every 30 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the exchange id (can be obtained from derivatives/exchanges/list) eg. bitmex",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_tickers",
            "in": "query",
            "description": "['all', 'unexpired'] - expired to show unexpired tickers, all to list all tickers, leave blank to omit tickers data in response",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "show derivative exchange data"
          }
        }
      }
    },
    "/derivatives/exchanges/list": {
      "get": {
        "tags": [
          "derivatives"
        ],
        "summary": "List all derivative exchanges name and identifier",
        "description": "List all derivative exchanges name and identifier.\n\nCache / Update Frequency: every 5 minutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "List all derivative exchanges name and identifier"
          }
        }
      }
    },
    "/exchanges/{id}/volume_chart": {
      "get": {
        "tags": [
          "exchanges"
        ],
        "summary": "Get 24 hour rolling trading volume data (in BTC) for a given exchange.",
        "description": "Get 24 hour rolling trading volume data (in BTC) for a given exchange.\n\n<b>Data granularity is automatic (cannot be adjusted)</b><ul><li>1 day = 10-minutely</li><li>2-90 days = hourly</li><li>91 days above = daily</li></ul>\n<p>Note: exclusive endpoint is available for paid users to query more than 1 year of historical data</p> \n\nCache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pass the exchange id (can be obtained from /exchanges/list) eg. binance",
            "required": true,
            "type": "string"
          },
          {
            "name": "days",
            "in": "query",
            "description": " Data up to number of days ago (1/7/14/30/90/180/365)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Get exchange volume_chart data"
          }
        }
      }
    },
    "/nfts/list": {
      "get": {
        "tags": [
          "nfts (beta)"
        ],
        "summary": "List all supported NFT ids, paginated by 100 items per page, paginated to 100 items",
        "description": "Use this to obtain all the NFT ids in order to make API calls, paginated to 100 items.\n\nCache / Update Frequency: every 5 minutes",
        "produces": [
          "application/json"
        ],
        "parameters" : [
          {
            "name": "order",
            "in": "query",
            "description": "valid values: <b>h24_volume_native_asc, h24_volume_native_desc, floor_price_native_asc, floor_price_native_desc, market_cap_native_asc, market_cap_native_desc, market_cap_usd_asc, market_cap_usd_desc</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_platform_id",
            "in": "query",
            "description": "The id of the platform issuing tokens (See asset_platforms endpoint for list of options)",
            "required": false,
            "type": "string"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Valid values: 1..250<br>Total results per page",
            "required": false,
            "type": "integer",
            "x-example": 100
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page through results",
            "required": false,
            "type": "integer",
            "x-example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List all nfts with id, contract_address, name ..."
          }
        }
      }
    },
    "/nfts/{id}": {
      "get": {
        "tags": [
          "nfts (beta)"
        ],
        "summary": "Get current data (name, price_floor, volume_24h ...) for an NFT collection",
        "description": "Get current data (name, price_floor, volume_24h ...) for an NFT collection. native_currency (string) is only a representative of the currency.\n\nCache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of nft collection (can be obtained from /nfts/list)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "display an NFT collection with name, price_floor, volume_24h ..."
          }
        }
      }
    },
    "/nfts/{asset_platform_id}/contract/{contract_address}": {
      "get": {
        "tags": [
          "nfts (beta)"
        ],
        "summary": "Get current data (name, price_floor, volume_24h ...) for an NFT collection.",
        "description": "Get current data (name, price_floor, volume_24h ...) for an NFT collection.\n*Solana NFT & Art Blocks are not supported for this endpoint, please use <b>`/nfts/{id}`</b> endpoint instead.\n\nCache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "asset_platform_id",
            "in": "path",
            "description": "The id of the platform issuing tokens (See asset_platforms endpoint for list of options, use filter=nft param)",
            "required": true,
            "type": "string"
          },
          {
            "name": "contract_address",
            "in": "path",
            "description": "The contract_address of the nft collection (/nfts/list for list of nft collection with metadata)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "display an NFT collection with name, price_floor, volume_24h ..."
          }
        }
      }
    },
    "/exchange_rates": {
      "get": {
        "tags": [
          "exchange_rates"
        ],
        "summary": "Get BTC-to-Currency exchange rates",
        "description": "Get BTC-to-Currency exchange rates\n\nCache / Update Frequency: every 60 seconds",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List rates"
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search for coins, categories and markets on CoinGecko",
        "description": "Search for coins, categories and markets listed on CoinGecko ordered by largest Market Cap first.\n\nCache / Update Frequency: every 15 minutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of coins, categories and markets matching search term ordered by market cap",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties":{
                    "coins": {
                      "type": "array",
                      "properties": {
                        "item": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "symbol": {
                              "type": "string"
                            },
                            "market_cap_rank": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "exchanges": {
                      "type": "array",
                      "properties": {
                        "item": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "market_type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "categories": {
                      "type": "array",
                      "properties": {
                        "item": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/trending": {
      "get": {
        "tags": [
          "trending"
        ],
        "summary": "Get trending search coins (Top-7) on CoinGecko in the last 24 hours",
        "description": "* Top-7 trending coins on CoinGecko as searched by users in the last 24 hours (Ordered by most popular first).\n* Top-5 trending NFTs on CoinGecko based on the highest trading volume in the last 24 hours\n\nCache / Update Frequency: every 10 minutes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List trending coins by most popular first"
          }
        }
      }
    },
    "/global": {
      "get": {
        "tags": [
          "global"
        ],
        "summary": "Get cryptocurrency global data",
        "description": "Get cryptocurrency global data\n\nCache / Update Frequency: every 10 minutes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get global data - total_volume, total_market_cap, ongoing icos etc"
          }
        }
      }
    },
    "/global/decentralized_finance_defi": {
      "get": {
        "tags": [
          "global"
        ],
        "summary": "Get cryptocurrency global decentralized finance(defi) data",
        "description": "Get Top 100 Cryptocurrency Global Eecentralized Finance(defi) data\n\nCache / Update Frequency: every 60 minutes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "defi_market_cap": {
            "description": "Defi Market Capitalization in USD"
          },
          "eth_market_cap": {
            "description": "Ethereum Market Capitalization in USD"
          },
          "defi_to_eth_ratio": {
            "description": "defi_market_cap to eth_market_cap ratio"
          },
          "trading_volume_24h": {
            "description": "defi trading volume in 24h in USD"
          },
          "defi_dominance": {
            "description": "defi_market_cap to total_market_cap ratio"
          },
          "top_coin_name": {
            "description": "defi coin with largest market_cap"
          },
          "top_coin_dominance": {
            "description": "top defi coin market dominance"
          }
        }
      }
    },
    "/companies/public_treasury/{coin_id}": {
      "get": {
        "tags": [
          "companies (beta)"
        ],
        "summary": "Get public companies data",
        "description": "Get public companies bitcoin or ethereum holdings (Ordered by total holdings descending)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "coin_id",
            "in": "path",
            "description": "bitcoin or ethereum",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get public companies bitcoin or ethereum holdings"
          }
        }
      }
    }
  },
  "definitions": {}
}
